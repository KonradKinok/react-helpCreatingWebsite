import { createReducer } from "@reduxjs/toolkit";
import { statusFilters_reduxToolkit } from "./constants_reduxToolkit";
import {
  addTask,
  deleteTask,
  toggleCompleted,
  setStatusFilter,
} from "./actions_reduxToolkit";

const tasksInitialState = [
  { id: 0, text: "Learn HTML and CSS", completed: true },
  { id: 1, text: "Get good at JavaScript", completed: true },
  { id: 2, text: "Master React", completed: false },
  { id: 3, text: "Discover Redux", completed: false },
  { id: 4, text: "Build amazing apps", completed: false },
  { id: 5, text: "Ucz się HTML oraz CSS", completed: true },
  { id: 6, text: "Bądź dobry w JavaScript", completed: true },
];

export const tasksReducer_reduxToolkit = createReducer(
  tasksInitialState,
  (builder) => {
    builder
      .addCase(addTask, (state, action) => {
        return [...state, action.payload];
      })
      .addCase(deleteTask, (state, action) => {
        return state.filter((task) => task.id !== action.payload);
      })
      .addCase(toggleCompleted, (state, action) => {
        return state.map((task) => {
          if (task.id !== action.payload) {
            return task;
          }
          return {
            ...task,
            completed: !task.completed,
          };
        });
      });
  },
);

const filtersInitialState = {
  status: statusFilters_reduxToolkit.all,
};

export const filtersReducer_reduxToolkit = createReducer(
  filtersInitialState,
  (builder) => {
    builder.addCase(setStatusFilter, (state, action) => {
      state.status = action.payload;
    });
  },
);
